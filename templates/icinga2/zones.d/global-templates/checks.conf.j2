object CheckCommand "celery" {
  command = [ "{{ icinga2_fdg_custom_plugin_directory }}/check_celery" ]
  arguments = {
    "--broker" = {
      value = "$celery_broker$"
      description = "URL of the broker celery should connect to"
      required = true
    }
    "--threshold-warn" = {
      value = "$celery_warning$"
      description = "Number of workers that should exist (less results in warning status)"
    }
    "--threshold-critical" = {
      value = "$celery_critical$"
      description = "Number of workers that must exist (less results in critical status)"
      required = true
    }
  }
}

object CheckCommand "celery_tasks" {
  command = [ "{{ icinga2_fdg_custom_plugin_directory }}/check_celery_tasks" ]
  arguments = {
    "--broker" = {
      value = "$celery_broker$"
      description = "URL of the broker celery should connect to"
      required = true
    }
    "--threshold-warn" = {
      value = "$celery_tasks_warning$"
      description = "Number of tasks that should not exist (more results in warning status)"
    }
    "--threshold-critical" = {
      value = "$celery_tasks_critical$"
      description = "Number of tasks that must not exist (more results in critical status)"
      required = true
    }
  }
}

object CheckCommand "zfs" {
  command = [ "/usr/bin/env", "sudo", "{{ icinga2_fdg_custom_plugin_directory }}/check_zfs" ]

  vars.capacity = ["$capacity_warning$", "$capacity_critical$"]
  vars.fragmentation = ["$fragmentation_warning$", "$fragmentation_critical$"]

  arguments = {
    "--capacity" = {
      value = "$capacity$"
      description = "monitor utilization of zpool (%, int [0-100])"
      order = -2
      repeat_key = false
    }
    "--fragmentation" = {
      value = "$fragmentation$"
      description = "monitor fragmentation of zpool (%, int [0-100])"
      order = -1
      repeat_key = false
    }
    "--zpool" = {
      value = "$zpool$"
      description = "Name of the ZFS-Pool to check"
      order = 0
      required = true
      skip_key = true
    }
  }
}

object CheckCommand "last_run" {
  command = [ "{{ icinga2_fdg_custom_plugin_directory }}/check_last_run.sh" ]
  arguments = {
    "-d" = {
      value = "$last_run_datefile$"
      description = "Path to the file containg the date"
      required = true
    }
    "-h" = {
      value = "$last_run_max_hours$"
      description = "Maximum time in hours since last run"
      required = true
    }
  }
}

object CheckCommand "borgmatic_last_run" {
  command = [ "{{ icinga2_fdg_custom_plugin_directory }}/check_borgmatic_last_run.sh" ]
  arguments = {
    "-h" = {
      value = "$borgmatic_last_run_max_hours$"
      description = "Maximum time in hours since last run"
      required = true
    }
  }
}

object CheckCommand "dyndns_record" {
  command = [ "{{ icinga2_fdg_custom_plugin_directory }}/check_dyndns_record.sh" ]
  arguments = {
    "--nameserver" = {
      value = "$dyndns_record_nameserver$"
      description = "Nameserver that should be queried"
      required = true
    }
    "--record" = {
      value = "$dyndns_record_record_name$"
      description = "Nameserver that should be queried"
      required = true
    }
    "-4" = {
      set_if = "$dyndns_record_ipv4$"
    }
    "-6" = {
      set_if = "$dyndns_record_ipv6$"
    }
  }
}
